{"version":3,"sources":["main.js"],"names":["document","getElementsByClassName","toggle","getElementById","togglea","lmenu","lmenua","ic","vic","topnav","di","dinone","setAttribute","_unused","console","log","resizeContent","diwrap2","parentNode","diwrap3","insertBefore","_unused2","addEventListener","classList","add","remove","window","matchMedia","matches","e","target","innerWidth","setTimeout","diwrap","_unused3","revertContent"],"mappings":"cAAA,WAGiBA,SAASC,uBAAuB,eAC/BD,SAASC,uBAAuB,gBAChCD,SAASC,uBAAuB,gBAF9C,IAGMC,EAASF,SAASG,eAAe,eACnCC,EAAUJ,SAASG,eAAe,qBAClCE,EAAQL,SAASG,eAAe,aAChCG,EAASN,SAASG,eAAe,mBACjCI,EAAKP,SAASG,eAAe,iBAC7BK,EAAMR,SAASG,eAAe,mBAC9BM,EAAST,SAASG,eAAe,WACjCO,EAAKV,SAASC,uBAAuB,kBACrCU,EAASX,SAASC,uBAAuB,uBAClCD,SAASG,eAAe,YACxBH,SAASC,uBAAuB,QAChCD,SAASC,uBAAuB,QAG3C,IACIU,EAAO,GAAGC,aAAa,QAAS,eAChCD,EAAO,GAAGC,aAAa,QAAS,eAChCD,EAAO,GAAGC,aAAa,QAAS,eAClC,MAAAC,GACEC,QAAQC,IAAI,uBAwEhB,SAASC,IACL,IACI,IAAIC,EAAUP,EAAG,GAAGQ,WAChBC,EAAUR,EAAO,GAAGO,WAC5BD,EAAQG,aAAaV,EAAG,GAAIA,EAAG,IAC/BS,EAAQC,aAAaT,EAAO,GAAIA,EAAO,IACvCQ,EAAQC,aAAaT,EAAO,GAAIA,EAAO,IACrC,MAAAU,GACEP,QAAQC,IAAI,yBA5EpBb,EAAOoB,iBAAiB,QAAS,WAC7BjB,EAAMO,aAAa,QAAS,kBAC5BN,EAAOM,aAAa,QAAS,mBAC7BH,EAAOc,UAAUC,IAAI,iBACrBjB,EAAGgB,UAAUC,IAAI,uBACjBhB,EAAIe,UAAUC,IAAI,2BAGtBpB,EAAQkB,iBAAiB,QAAS,WAC9BhB,EAAOM,aAAa,QAAS,iBAC7BP,EAAMO,aAAa,QAAS,mBAC5BH,EAAOc,UAAUE,OAAO,iBACxBlB,EAAGgB,UAAUE,OAAO,uBACpBjB,EAAIe,UAAUE,OAAO,2BAItBC,OAAOC,WAAW,kCAAkCC,SACnDZ,IAQJU,OAAOJ,iBAAiB,SAAU,SAASO,GACnCA,EAAEC,OAAOC,YAAc,KACvBC,WAAW,WACPhB,KACD,GAC0B,KAAtBa,EAAEC,OAAOC,YAChBC,WAAW,YAgDnB,WACI,IACI,IAAIC,EAASvB,EAAG,GAAGQ,WACfD,EAAUN,EAAO,GAAGO,WAC5Be,EAAOb,aAAaV,EAAG,GAAI,MAC3BO,EAAQG,aAAaT,EAAO,GAAI,MAChCM,EAAQG,aAAaT,EAAO,GAAI,MAC9B,MAAAuB,GACEpB,QAAQC,IAAI,yBAvDRoB,IACD,KA/Df","file":"lib.min.js","sourcesContent":["(function() {\n    'use strict';\n\n    let diwrap = document.getElementsByClassName(\"d-item-wrap\"),\n        diwrap2 = document.getElementsByClassName(\"d-item-wrap2\"),\n        diwrap3 = document.getElementsByClassName(\"d-item-wrap3\");\n    const toggle = document.getElementById(\"toggle-menu\"),\n        togglea = document.getElementById(\"toggle-menu-after\"),\n        lmenu = document.getElementById(\"left-menu\"),\n        lmenua = document.getElementById(\"left-menu-after\"),\n        ic = document.getElementById(\"inner-content\"),\n        vic = document.getElementById(\"v-inner-content\"),\n        topnav = document.getElementById(\"top-nav\"),\n        di = document.getElementsByClassName(\"dashboard-item\"),\n        dinone = document.getElementsByClassName(\"dashboard-item-none\"),\n        hbtn = document.getElementById(\"help-btn\"),\n        outp = document.getElementsByClassName(\"outp\"),\n        prog = document.getElementsByClassName(\"prog\");\n\n    // initialization process\n    try {\n        dinone[1].setAttribute('style', \"opacity: 0;\");\n        dinone[2].setAttribute('style', \"opacity: 0;\");\n        dinone[3].setAttribute('style', \"opacity: 0;\");\n    } catch {\n        console.log(\"dinone are nowhere.\");\n    }\n\n    // implement togglemenu\n    toggle.addEventListener(\"click\", function() {\n        lmenu.setAttribute('style', \"display: none;\");\n        lmenua.setAttribute('style', \"display: block;\");\n        topnav.classList.add(\"top-nav-after\")\n        ic.classList.add(\"inner-content-after\");\n        vic.classList.add(\"v-inner-content-after\");\n    });\n\n    togglea.addEventListener(\"click\", function() {\n        lmenua.setAttribute('style', \"display: none\");\n        lmenu.setAttribute('style', \"display: block;\");\n        topnav.classList.remove(\"top-nav-after\");\n        ic.classList.remove(\"inner-content-after\");\n        vic.classList.remove(\"v-inner-content-after\");\n    });\n\n    // deal with responsive3\n    if(window.matchMedia(\"screen and (max-width: 1500px)\").matches) {\n        resizeContent();\n    } \n    // if (window.matchMedia(\"screen and (max-width: 1050px)\").matches) {\n    //     // resizeContent();\n    //     resizeContent2();\n    //     // console.log(\"hello\");\n    // }\n\n    window.addEventListener('resize', function(e) {\n        if (e.target.innerWidth <= 1500) {\n            setTimeout(function() {\n                resizeContent();\n            }, 0);\n        } else if (e.target.innerWidth > 1500) {\n            setTimeout(function() {\n                revertContent();\n            }, 0);\n        } \n        // else if (e.target.innerWidth <= 1050) {\n        //     setTimeout(function() {\n        //         resizeContent2();\n        //     }, 0);\n        //     if(e.target.innerWidth > 1050) {\n        //         setTimeout(function() {\n        //             revertContent2();\n        //         })\n        //     }\n        // }\n    });\n    // window.addEventListener('resize', function(e) {\n    //     if (e.target.innerWidth)\n    // })\n\n    //implement progress bar\n    // addEventListener(\"\", function() {\n    //     switch(prog.value) {\n    //         case :\n    //             prog.value = ;\n    //             outp.value = ;\n    //             break;\n    //         case :\n    //             prog.value = ;\n    //             outp.value = ;\n    //             break;\n    //         default:\n    //             prog.value = ;\n    //             outp.value = ;\n    //     }\n    // });\n\n    function resizeContent() {\n        try {\n            let diwrap2 = di[4].parentNode,\n                diwrap3 = dinone[3].parentNode;\n        diwrap2.insertBefore(di[3], di[4]);\n        diwrap3.insertBefore(dinone[2], dinone[3]);\n        diwrap3.insertBefore(dinone[1], dinone[2]);\n        } catch {\n            console.log(\"diwraps are nowhere.\");\n        }\n    }\n\n    function revertContent() {\n        try {\n            let diwrap = di[2].parentNode,\n                diwrap2 = dinone[0].parentNode;\n        diwrap.insertBefore(di[3], null);\n        diwrap2.insertBefore(dinone[1], null);\n        diwrap2.insertBefore(dinone[2], null);\n        } catch {\n            console.log(\"diwraps are nowhere.\");\n        }\n    }\n\n    // function resizeContent2() {\n    //     let diwrap2 = di[3].parentNode,\n    //         diwrap3 = dinone[1].parentNode;\n    //     diwrap2.insertBefore(di[2], di[3]);\n    //     diwrap3.insertBefore(dinone[0], dinone[1]);\n    //     diwrap3.insertBefore(di[4], dinone[0]);\n    // }\n\n    // function revertContent2() {\n    //     let diwrap = di[1].parentNode,\n    //         diwrap2 = di[3].parentNode;\n    //     diwrap.insertBefore(di[2], null);\n    //     diwrap2.insertBefore(di[4], null);\n    //     diwrap2.insertBefore(dinone[0], null);\n    // }\n\n    // ic.insertBefore(hbtn, null);\n\n\n})();"]}